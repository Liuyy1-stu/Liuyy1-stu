回溯法
本质为穷举，通过加入、删除与递归的结合列举出所有可能并且记录符合条件的解集
可以解决的问题：组合问题：N个数里面按一定规则找出k个数的集合
              切割问题：一个字符串按一定规则有几种切割方式
              子集问题：一个N个数的集合里有多少符合条件的子集
              排列问题：N个数按一定规则全排列，有几种排列方式
              棋盘问题：N皇后，解数独等等
回溯法解决的问题都可以抽象为树形结构，集合的大小就构成了树的宽度，递归的深度就构成了树的深度
回溯法模板：
void backtracking(参数) {
    if (终止条件) {
        存放结果;
        return;
    }

    for (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) {
        处理节点;
        backtracking(路径，选择列表); // 递归
        回溯，撤销处理结果
    }
}

可以解决用到回溯的几乎所有问题


